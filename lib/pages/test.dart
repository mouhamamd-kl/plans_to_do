
import 'package:mytest/services/collectionsrefrences.dart';
import '../models/User/User_task_Model.dart';
import '../services/auth_service.dart';

List<UserTaskModel> listtask = [
  UserTaskModel(
    userIdParameter: firebaseAuth.currentUser!.uid,
    folderIdParameter: "folder1",
    taskFatherIdParameter: null,
    descriptionParameter: "Do laundry",
    idParameter: usersTasksRef.doc().id,
    nameParameter: "Laundry",
    statusIdParameter: "in_progress",
    importanceParameter: 3,
    createdAtParameter: DateTime.now(),
    updatedAtParameter: DateTime.now().add(const Duration(days: 1)),
    startDateParameter: DateTime.now(),
    endDateParameter: DateTime.now().add(const Duration(days: 2)),
  ),
  UserTaskModel(
    userIdParameter: firebaseAuth.currentUser!.uid,
    folderIdParameter: "folder1",
    taskFatherIdParameter: null,
    descriptionParameter: "Buy groceries",
    idParameter: usersTasksRef.doc().id,
    nameParameter: "Groceries",
    statusIdParameter: "todo",
    importanceParameter: 2,
    createdAtParameter: DateTime.now(),
    updatedAtParameter: DateTime.now().add(const Duration(days: 1)),
    startDateParameter: DateTime.now(),
    endDateParameter: DateTime.now().add(const Duration(days: 4)),
  ),
  UserTaskModel(
    userIdParameter: firebaseAuth.currentUser!.uid,
    folderIdParameter: "folder2",
    taskFatherIdParameter: null,
    descriptionParameter: "Finish homework",
    idParameter: usersTasksRef.doc().id,
    nameParameter: "Homework",
    statusIdParameter: "done",
    importanceParameter: 4,
    createdAtParameter: DateTime.now(),
    updatedAtParameter: DateTime.now().add(const Duration(days: 1)),
    startDateParameter: DateTime.now(),
    endDateParameter: DateTime.now().add(const Duration(days: 3)),
  ),
  UserTaskModel(
    userIdParameter: firebaseAuth.currentUser!.uid,
    folderIdParameter: "folder2",
    taskFatherIdParameter: null,
    descriptionParameter: "Go to the gym",
    idParameter: usersTasksRef.doc().id,
    nameParameter: "Gym",
    statusIdParameter: "todo",
    importanceParameter: 3,
    createdAtParameter: DateTime.now(),
    updatedAtParameter: DateTime.now().add(const Duration(days: 2)),
    startDateParameter: DateTime.now(),
    endDateParameter: DateTime.now().add(const Duration(days: 2)),
  ),
  UserTaskModel(
    userIdParameter: firebaseAuth.currentUser!.uid,
    folderIdParameter: "folder1",
    taskFatherIdParameter: null,
    descriptionParameter: "Read a book",
    idParameter: usersTasksRef.doc().id,
    nameParameter: "Reading",
    statusIdParameter: "in_progress",
    importanceParameter: 2,
    createdAtParameter: DateTime.now(),
    updatedAtParameter: DateTime.now().add(const Duration(days: 2)),
    startDateParameter: DateTime.now(),
    endDateParameter: DateTime.now().add(const Duration(days: 5)),
  ),
  UserTaskModel(
    userIdParameter: firebaseAuth.currentUser!.uid,
    folderIdParameter: "folder1",
    taskFatherIdParameter: usersTasksRef.doc("IFDb7F1T3vmBCQK8PX2G"),
    descriptionParameter: "Clean the house",
    idParameter: usersTasksRef.doc().id,
    nameParameter: "Cleaning",
    statusIdParameter: "todo",
    importanceParameter: 1,
    createdAtParameter: DateTime.now(),
    updatedAtParameter: DateTime.now().add(const Duration(days: 2)),
    startDateParameter: DateTime.now(),
    endDateParameter: DateTime.now().add(const Duration(days: 1)),
  ),
];
